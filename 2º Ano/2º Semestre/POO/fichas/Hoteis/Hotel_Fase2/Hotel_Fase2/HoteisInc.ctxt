#BlueJ class context
comment0.target=HoteisInc
comment0.text=\n\ Classe\ de\ gest\u00E3o\ do\ complexo\ de\ hoteis\n\ @author\ Rui\ Couto\n\ @version\ 1.0\n\ \n\ @author\ anr\n\ @version\ 2.0\ (2016/17)\n\ \n
comment1.params=nome\ ordem
comment1.target=void\ juntaOrdenacao(java.lang.String,\ java.util.Comparator)
comment10.params=cod
comment10.target=boolean\ existeHotel(java.lang.String)
comment10.text=\n\ Verificar\ a\ exist\u00EAncia\ de\ um\ hotel,\ dado\ o\ seu\ c\u00F3digo.\n
comment11.params=
comment11.target=int\ quantos()
comment11.text=\n\ Devolver\ a\ quantidade\ de\ hot\u00E9is\ existentes\ na\ cadeia.\n
comment12.params=loc
comment12.target=int\ quantos(java.lang.String)
comment12.text=\n\ Devolver\ o\ n\u00FAmero\ total\ de\ hot\u00E9is\ de\ uma\ dada\ localidade.\n
comment13.params=tipo
comment13.target=int\ quantosT(java.lang.String)
comment13.text=\n\ Devolver\ a\ quantidade\ de\ hot\u00E9is\ de\ um\ dado\ tipo.\n
comment14.params=cod
comment14.target=Hotel\ getHotel(java.lang.String)
comment14.text=\n\ Devolver\ a\ ficha\ de\ um\ hotel,\ dado\ o\ seu\ c\u00F3digo\n\ \n\ utilizar\ como\:\n\ \n\ try\ {\n\ \ \ Hotel\ h\ \=\ <objecto>.getHotel(cod);\n\ }\n\ catch\ (HotelInexistenteException\ e)\ {....}\n\ \n
comment15.params=h
comment15.target=void\ adiciona(Hotel)
comment15.text=\n\ Adicionar\ a\ informa\u00E7\u00E3o\ de\ um\ novo\ hotel\n
comment16.params=
comment16.target=long\ total100()
comment16.text=\n\ Calcular\ o\ valor\ total\ di\u00E1rio\ recebido,\ considerando\ uma\ ocupa\u00E7\u00E3o\ dos\ hot\u00E9is\ de\ 100%.\n
comment17.params=
comment17.target=java.util.List\ getHoteisAsList()
comment18.params=epoca
comment18.target=void\ mudaPara(java.lang.String)
comment19.params=hs
comment19.target=void\ adiciona(java.util.Set)
comment2.params=nome
comment2.target=java.util.Comparator\ getOrdem(java.lang.String)
comment20.params=
comment20.target=java.util.List\ daoPontos()
comment21.params=
comment21.target=java.util.TreeSet\ ordenarHoteis()
comment22.params=c
comment22.target=java.util.TreeSet\ ordenarHoteis(java.util.Comparator)
comment23.params=criterio
comment23.target=java.util.Iterator\ ordenarHoteis(java.lang.String)
comment24.params=
comment24.target=HoteisInc\ clone()
comment24.text=\n\ Devolver\ uma\ c\u00F3pia\ da\ inst\u00E2ncia\n\ @return\ \n
comment25.params=obj
comment25.target=boolean\ equals(java.lang.Object)
comment25.text=\n\ Verifica\ a\ igualdade\ com\ outro\ objecto\n\ @param\ obj\n\ @return\ \n
comment26.params=
comment26.target=java.lang.String\ toString()
comment26.text=\n\ Devolve\ representa\u00E7\u00E3o\ textual\ dos\ hoteis\n\ @return\ \n
comment27.params=nomeFicheiro
comment27.target=void\ escreveEmFicheiroTxt(java.lang.String)
comment27.text=\n\ M\u00E9todo\ que\ guarda\ o\ estado\ de\ uma\ inst\u00E2ncia\ num\ ficheiro\ de\ texto.\n\ \n\ @param\ nome\ do\ ficheiro\n
comment28.params=nomeFicheiro
comment28.target=void\ guardaEstado(java.lang.String)
comment28.text=\n\ M\u00E9todo\ que\ guarda\ em\ ficheiro\ de\ objectos\ o\ objecto\ que\ recebe\ a\ mensagem.\n
comment29.params=nomeFicheiro
comment29.target=HoteisInc\ carregaEstado(java.lang.String)
comment29.text=\n\ M\u00E9todo\ que\ recupera\ uma\ inst\u00E2ncia\ de\ HoteisInc\ de\ um\ ficheiro\ de\ objectos.\n\ Este\ m\u00E9todo\ tem\ de\ ser\ um\ m\u00E9todo\ de\ classe\ que\ devolva\ uma\ inst\u00E2ncia\ j\u00E1\ constru\u00EDda\ de\n\ HoteisInc.\n\ \n\ @param\ nome\ do\ ficheiro\ onde\ est\u00E1\ guardado\ um\ objecto\ do\ tipo\ HoteisInc\n\ @return\ objecto\ HoteisInc\ inicializado\n
comment3.params=
comment3.target=HoteisInc()
comment3.text=\n\ Construtor\ vazio\n
comment4.params=c
comment4.target=HoteisInc(HoteisInc)
comment4.text=\n\ Construtor\ por\ c\u00F3pia\n\ @param\ c\ \n
comment5.params=nome\ hoteis
comment5.target=HoteisInc(java.lang.String,\ java.util.Map)
comment5.text=\n\ Construtor\ por\ par\u00E2metro\n\ @param\ hoteis\ \n
comment6.params=
comment6.target=java.lang.String\ getNome()
comment6.text=\n\ Obter\ o\ nome\ da\ cadeia\ de\ hoteis\n\ @return\ o\ nome\n
comment7.params=nome
comment7.target=void\ setNome(java.lang.String)
comment7.text=\n\ Actualizar\ o\ nome\ da\ cadeia\ de\ hoteis\n\ @return\ o\ nome\n
comment8.params=
comment8.target=java.util.Map\ getHoteis()
comment8.text=\n\ Obter\ uma\ c\u00F3pia\ do\ mapeamento\ de\ hoteis\n\ (M\u00E9todo\ auxiliar\ para\ os\ construtores)\n\ @return\ um\ Map\n
comment9.params=hoteis
comment9.target=void\ setHoteis(java.util.Map)
comment9.text=\n\ Definir\ os\ hoteis\n\ (M\u00E9todo\ auxiliar\ para\ os\ construtores)\n\ @param\ hoteis\ \n
numComments=30
