<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Main</title><link href="ocean.css" rel="stylesheet" type="text/css" title="Ocean" /><script src="haddock-util.js" type="text/javascript"></script><script type="text/javascript">//<![CDATA[
window.onload = function () {pageLoad();setSynopsis("mini_Main.html");};
//]]>
</script></head><body><div id="package-header"><ul class="links" id="page-menu"><li><a href="index.html">Contents</a></li><li><a href="doc-index.html">Index</a></li></ul><p class="caption empty">&nbsp;</p></div><div id="content"><div id="module-header"><table class="info"><tr><th>Safe Haskell</th><td>Safe</td></tr></table><p class="caption">Main</p></div><div id="description"><p class="caption">Description</p><div class="doc"><p>M&#243;dulo: Main</p><p>T&#237;tulo: Problema D</p><p>Descri&#231;&#227;o: M&#243;dulo Haskell que dado um tabuleiro com as coordenadas do Sokoban, caixas e um conjunto de movimentos devolva o estado do jogo.</p><p>Copyright: Francisco Oliveira <em>a78416@alunos.uminho.pt</em>   | | |   Vitor Peixoto <em>a79175@alunos.uminho.pt</em></p><p>Resumo: M&#243;dulo contendo defini&#231;&#245;es Haskell do Problema D da 2&#170; Fase do Projeto da disciplina de Laborat&#243;rios de Inform&#225;tica I. Este m&#243;dulo cont&#233;m fun&#231;&#245;es que movimentam o Sokoban atrav&#233;s da introdu&#231;&#227;o de um tabuleiro com coordenadas do Sokoban e de caixas e de uma <em>String</em> com um conjunto de carateres que d&#227;o os comandos das dire&#231;&#245;es que o Sokoban deve tomar. Se o conjunto de comandos dado levar &#224; vit&#243;ria, devolve &quot;FIM <a href="tick_count">tick_count</a>&quot; onde <a href="tick_count">tick_count</a> representa o n&#250;mero de movimentos funcionais efetuados. Os movimentos s&#227;o representados por U,D,R ou L para Up (Cima), Down (Baixo), Right (Direita) ou Left (Esquerda) respetivamente. O movimento do Sokoban tem as mesmas limita&#231;&#245;es que na Tarefa C.</p><h2>FUN&#199;&#213;ES DEFINIDAS NO ESQUELETO INICIAL</h2></div></div><div id="synopsis"><p id="control.syn" class="caption expander" onclick="toggleSection('syn')">Synopsis</p><ul id="section.syn" class="hide" onclick="toggleSection('syn')"><li class="src short"><a href="#v:inStr">inStr</a> :: String -&gt; [String]</li><li class="src short"><a href="#v:outStr">outStr</a> :: [String] -&gt; String</li><li class="src short"><a href="#v:main">main</a> :: IO ()</li><li class="src short"><a href="#v:tarefa4">tarefa4</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:rinceAndRepeat">rinceAndRepeat</a> :: [String] -&gt; String -&gt; [String]</li><li class="src short"><a href="#v:tarefa3-39-">tarefa3'</a> :: [String] -&gt; (Int, Int)</li><li class="src short"><a href="#v:movimentos">movimentos</a> :: [String] -&gt; (Int, Int) -&gt; (Int, Int) -&gt; (Int, Int)</li><li class="src short"><a href="#v:charNaPosicao">charNaPosicao</a> :: [String] -&gt; (Int, Int) -&gt; Char</li><li class="src short"><a href="#v:funcaoPlantaMelhor">funcaoPlantaMelhor</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:updateTABcaixas">updateTABcaixas</a> :: [String] -&gt; (Int, Int) -&gt; [String]</li><li class="src short"><a href="#v:updateTABsokoban">updateTABsokoban</a> :: [String] -&gt; (Int, Int) -&gt; [String]</li><li class="src short"><a href="#v:updateTABAux">updateTABAux</a> :: String -&gt; Int -&gt; String</li><li class="src short"><a href="#v:updateTABcaixasAux">updateTABcaixasAux</a> :: String -&gt; Int -&gt; String</li><li class="src short"><a href="#v:updateTABsokobanAux">updateTABsokobanAux</a> :: String -&gt; Int -&gt; String</li><li class="src short"><a href="#v:sepTABCoord">sepTABCoord</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:sepTabCOORD">sepTabCOORD</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:sepCOORD1">sepCOORD1</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:sepCOORD2">sepCOORD2</a> :: [String] -&gt; [(Int, Int)]</li><li class="src short"><a href="#v:sepTabCOORDpares">sepTabCOORDpares</a> :: [String] -&gt; [(Int, Int)]</li><li class="src short"><a href="#v:algarismos">algarismos</a> :: Char -&gt; Bool</li></ul></div><div id="interface"><h1>Documentation</h1><div class="top"><p class="src"><a name="v:inStr" class="def">inStr</a> :: String -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que dada uma <em>String</em>, separa-a onde encontra <em>\n</em> e junta as diferentes <em>String</em> criadas numa lista de <em>String</em>.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>&quot;Ola\nMundo&quot;
</code></strong>[&quot;Ola&quot;,&quot;Mundo&quot;]
</pre></div></div><div class="top"><p class="src"><a name="v:outStr" class="def">outStr</a> :: [String] -&gt; String</p><div class="doc"><p>Fun&#231;&#227;o que dada uma lista de <em>String</em> devolve os elementos da lista, agrupados e apenas separados por <em>\n</em>. Fun&#231;&#227;o inversa de <em>inStr</em>.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>[&quot;Ola&quot;,&quot;Mundo&quot;]
</code></strong>&quot;Ola\nMundo\n&quot;
</pre></div></div><div class="top"><p class="src"><a name="v:main" class="def">main</a> :: IO ()</p><div class="doc"><p>Fun&#231;&#227;o principal (<em>main</em>).</p></div></div><div class="top"><p class="src"><a name="v:tarefa4" class="def">tarefa4</a> :: [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que dado um tabuleiro retribui o n&#250;mero de movimentos funcionais (exclui comandos em que o Sokoban n&#227;o se moveu) e se ganhou o jogo ou n&#227;o.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>tarefa4 [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;,&quot;2 1&quot;,&quot;1 2&quot;,&quot;3 2&quot;,&quot;RUDLLU&quot;]
</code></strong>&quot;FIM 6&quot;
</pre><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>tarefa4 [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;,&quot;2 1&quot;,&quot;1 2&quot;,&quot;3 2&quot;,&quot;RUDLL&quot;]
</code></strong>&quot;INCOMPLETO 5&quot;
</pre><h2>FUN&#199;&#213;ES DE SEQU&#202;NCIA DE COMANDOS</h2></div></div><div class="top"><p class="src"><a name="v:rinceAndRepeat" class="def">rinceAndRepeat</a> :: [String] -&gt; String -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que teste se o conjunto de comandos introduzidos levou &#224; vit&#243;ria, ou seja, se as caixas ficaram localizadas em cima dos pontos.</p><p>Fun&#231;&#227;o rinceAndRepeat</p><h2>FUN&#199;&#213;ES IMPORTADAS DE OUTRAS TAREFAS</h2></div></div><div class="top"><p class="src"><a name="v:tarefa3-39-" class="def">tarefa3'</a> :: [String] -&gt; (Int, Int)</p><div class="doc"><p>Fun&#231;&#227;o importada da Tarefa C que dado um tabuleiro com as coordenadas do Sokoban, caixas e um comando de movimentos (U,D,R,L) devolve a nova coordenada do Sokoban resultante desse movimento.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>tarefa3' [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;,&quot;2 1&quot;,&quot;1 2&quot;,&quot;3 2&quot;,&quot;U&quot;]
</code></strong>(2,2)
</pre></div></div><div class="top"><p class="src"><a name="v:movimentos" class="def">movimentos</a> :: [String] -&gt; (Int, Int) -&gt; (Int, Int) -&gt; (Int, Int)</p><div class="doc"><p>Fun&#231;&#227;o que movimenta o Sokoban atrav&#233;s da introdu&#231;&#227;o das coordenadas do Sokoban e das coordenadas definidas para movimentar o Sokoban ((0,1) para cima ||| (0,-1) para baixo ||| (1,0) para a direita ||| (-1,0) para a esquerda).</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>movimentos [&quot;###&quot;,&quot;#.#&quot;,&quot;# #&quot;,&quot;# #&quot;,&quot;###&quot;] (1,1) (0,1)
</code></strong>[&quot;1 2&quot;]
</pre><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>movimentos [&quot;###&quot;,&quot;#.#&quot;,&quot;# #&quot;,&quot;# #&quot;,&quot;###&quot;] (1,1) (1,0)
</code></strong>[&quot;1 1&quot;]
</pre></div></div><div class="top"><p class="src"><a name="v:charNaPosicao" class="def">charNaPosicao</a> :: [String] -&gt; (Int, Int) -&gt; Char</p><div class="doc"><p>Fun&#231;&#227;o auxiliar de <em>movimentos</em> que dado um tabuleiro e as coordenadas de uma caixa ou Sokoban diz o que est&#225; nessa coordenada. Se estiver vazio, est&#225; dispon&#237;vel para receber uma caixa ou o Sokoban.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>charNaPosicao [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;] (2,2)
</code></strong>' '
</pre><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>charNaPosicao [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;] (4,1)
</code></strong>'#'
</pre><h2>FUN&#199;&#195;O <em>PLANTAMELHOR</em> E SUAS AUXILIARES</h2></div></div><div class="top"><p class="src"><a name="v:funcaoPlantaMelhor" class="def">funcaoPlantaMelhor</a> :: [String] -&gt; [String]</p><div class="doc"><p>Dado o tabuleiro com as coordenadas (<em>String</em>) devolve o tabuleiro com o Sokoban nas respetivas coordenadas e representado pelo &quot;o&quot;, as caixas tamb&#233;m nas respetivas coordenadas representadas por &quot;<a href="H.html">H</a>&quot; e as caixas quando est&#227;o em cima do ponto s&#227;o representadas por &quot;<a href="I.html">I</a>&quot;.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>funcaoPlantaMelhor [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;,&quot;2 1&quot;,&quot;1 2&quot;,&quot;3 2&quot;,&quot; &quot;]
</code></strong>[&quot;#####&quot;,&quot;#. .#&quot;,&quot;#H H#&quot;,&quot;# o #&quot;,&quot;#####&quot;]
</pre><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>funcaoPlantaMelhor [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;,&quot;2 2&quot;,&quot;1 2&quot;,&quot;3 3&quot;,&quot; &quot;]
</code></strong>[&quot;#####&quot;,&quot;#. I#&quot;,&quot;#Ho #&quot;,&quot;#   #&quot;,&quot;#####&quot;]
</pre><h2>FUN&#199;&#213;ES UPDATE</h2></div></div><div class="top"><p class="src"><a name="v:updateTABcaixas" class="def">updateTABcaixas</a> :: [String] -&gt; (Int, Int) -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o auxiliar de <em>FuncaoPlantaMelhor</em> que dado um tabuleiro e a coordenada de uma caixa, coloca essa caixa no tabuleiro, que fica representada pelo carater &quot;<a href="H.html">H</a>&quot; caso a caixa se localize num espa&#231;o vazio ou pelo carater &quot;<a href="I.html">I</a>&quot; caso fique em cima de qualquer outro carater, ou seja, o ponto.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>updateTABcaixas [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;] (1,2)
</code></strong>[&quot;#####&quot;,&quot;#. .#&quot;,&quot;#H  #&quot;,&quot;#   #&quot;,&quot;#####&quot;]
</pre><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>updateTABcaixas [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;] (1,1)
</code></strong>[&quot;#####&quot;,&quot;#I .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;]
</pre></div></div><div class="top"><p class="src"><a name="v:updateTABsokoban" class="def">updateTABsokoban</a> :: [String] -&gt; (Int, Int) -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o auxiliar de <em>FuncaoPlantaMelhor</em> que dado um tabuleiro e a coordenada do Sokoban, coloca-o no tabuleiro, na sua respetiva coordenada. O Sokoban est&#225; representado pelo carater &quot;o&quot;.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>updateTABsokoban [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;] (1,1)
</code></strong>[&quot;#####&quot;,&quot;#o .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;]
</pre><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>updateTABsokoban [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;] (3,2)
</code></strong>[&quot;#####&quot;,&quot;#. .#&quot;,&quot;#  o#&quot;,&quot;#   #&quot;,&quot;#####&quot;]
</pre></div></div><div class="top"><p class="src"><a name="v:updateTABAux" class="def">updateTABAux</a> :: String -&gt; Int -&gt; String</p><div class="doc"><p>Fun&#231;&#227;o auxiliar de <em>updateTAB</em>.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>updateTABAux &quot;#   #&quot; 1
</code></strong>&quot;##  #&quot;
</pre></div></div><div class="top"><p class="src"><a name="v:updateTABcaixasAux" class="def">updateTABcaixasAux</a> :: String -&gt; Int -&gt; String</p><div class="doc"><p>Fun&#231;&#227;o auxiliar de <em>updateTABcaixas</em> que define a letra a colocar na coordenada da caixa. Se no espa&#231;o estiver o carater &quot; &quot;, coloca &quot;<a href="H.html">H</a>&quot;. Se n&#227;o for vazio, coloca o carater &quot;<a href="I.html">I</a>&quot;.</p></div></div><div class="top"><p class="src"><a name="v:updateTABsokobanAux" class="def">updateTABsokobanAux</a> :: String -&gt; Int -&gt; String</p><div class="doc"><p>Fun&#231;&#227;o auxiliar de <em>updateTABsokoban</em> que l&#234; a coordenada do Sokoban e o coloca no tabuleiro representado pelo carater &quot;o&quot;.</p><h2>SEPARAR TABULEIRO DAS COORDENADAS</h2></div></div><div class="top"><p class="src"><a name="v:sepTABCoord" class="def">sepTABCoord</a> :: [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o auxiliar de <em>FuncaoPlantaMelhor</em> que separa o tabuleiro das coordenadas. D&#225; apenas o tabuleiro.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>sepTABCoord [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;,&quot;2 1&quot;,&quot;1 2&quot;,&quot;3 2&quot;,&quot; &quot;]
</code></strong>[&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;]
</pre></div></div><div class="top"><p class="src"><a name="v:sepTabCOORD" class="def">sepTabCOORD</a> :: [String] -&gt; [String]</p><div class="doc"><p>Separa&#231;&#227;o das coordenadas do tabuleiro. D&#225; apenas as coordenadas da localiza&#231;&#227;o do Sokoban e das caixas.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>sepTabCOORD [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;,&quot;2 1&quot;,&quot;1 2&quot;,&quot;3 2&quot;,&quot; &quot;]
</code></strong>[&quot;2 1&quot;,&quot;1 2&quot;,&quot;3 2&quot;]
</pre></div></div><div class="top"><p class="src"><a name="v:sepCOORD1" class="def">sepCOORD1</a> :: [String] -&gt; [String]</p><div class="doc"><p>Separa as coordenadas uma a uma.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>sepCOORD1 [&quot;2 1&quot;,&quot;1 2&quot;,&quot;3 2&quot;]
</code></strong>[&quot;2&quot;,&quot;1&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;2&quot;]
</pre></div></div><div class="top"><p class="src"><a name="v:sepCOORD2" class="def">sepCOORD2</a> :: [String] -&gt; [(Int, Int)]</p><div class="doc"><p>Ap&#243;s separar as coordenadas uma a uma, juntamo-las em pares de inteiros.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>sepCOORD2 [&quot;2&quot;,&quot;1&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;2&quot;]
</code></strong>[(2,1),(1,2),(3,2)]
</pre></div></div><div class="top"><p class="src"><a name="v:sepTabCOORDpares" class="def">sepTabCOORDpares</a> :: [String] -&gt; [(Int, Int)]</p><div class="doc"><p>Fun&#231;&#227;o auxiliar de <em>funcaoPlantaMelhor</em> que junta as tr&#234;s anteriores fun&#231;&#245;es e executa todas apenas nesta.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>sepTabCOORDpares [&quot;#####&quot;,&quot;#. .#&quot;,&quot;#   #&quot;,&quot;#   #&quot;,&quot;#####&quot;,&quot;2 1&quot;,&quot;1 2&quot;,&quot;3 2&quot;,&quot; &quot;]
</code></strong>[(2,1),(1,2),(3,2)]
</pre><h2>FUN&#199;&#213;ES AUXILIARES</h2></div></div><div class="top"><p class="src"><a name="v:algarismos" class="def">algarismos</a> :: Char -&gt; Bool</p><div class="doc"><p>Fun&#231;&#227;o auxiliar de <em>testeCOORDso2numeros</em> que dada uma lista de <em>Char</em> diz se essa lista tem apenas n&#250;meros. Qualquer outro tipo de carater devolve <em>Falso</em>.</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>algarismos [1,3,5,a,6,b]
</code></strong>False
</pre><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>algarismos [1,3,7,4,2]
</code></strong>True
</pre><h2>FUN&#199;&#213;ES PREDEFINIDAS</h2></div></div></div></div><div id="footer"><p>Produced by <a href="http://www.haskell.org/haddock/">Haddock</a> version 2.16.1</p></div></body></html>