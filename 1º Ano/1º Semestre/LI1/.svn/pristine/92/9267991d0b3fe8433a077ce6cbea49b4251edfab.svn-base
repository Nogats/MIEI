<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Main</title><link href="ocean.css" rel="stylesheet" type="text/css" title="Ocean" /><script src="haddock-util.js" type="text/javascript"></script><script type="text/javascript">//<![CDATA[
window.onload = function () {pageLoad();setSynopsis("mini_Main.html");};
//]]>
</script></head><body><div id="package-header"><ul class="links" id="page-menu"><li><a href="index.html">Contents</a></li><li><a href="doc-index.html">Index</a></li></ul><p class="caption empty">&nbsp;</p></div><div id="content"><div id="module-header"><table class="info"><tr><th>Safe Haskell</th><td>Safe</td></tr></table><p class="caption">Main</p></div><div id="description"><p class="caption">Description</p><div class="doc"><p>M&#243;dulo: Main</p><p>Descri&#231;&#227;o: M&#243;dulo Haskell que dado um tabuleiro, efetua diversos testes ao tabuleiro de jogo.</p><p>Copyright: Francisco Oliveira <a href="a78416@alunos.uminho.pt">a78416@alunos.uminho.pt</a>   | | |   Vitor Peixoto <a href="a79175@alunos.uminho.pt">a79175@alunos.uminho.pt</a></p><p>Resumo: M&#243;dulo contendo defini&#231;&#245;es Haskell do Trabalho A da 1&#170; Fase do Projeto da disciplina de Laborat&#243;rios de Inform&#225;tica I. Este m&#243;dulo cont&#233;m fun&#231;&#245;es que testam a funcionalidade do tabuleiro e os erros l&#243;gicos que impossibilitem a jogabilidade. Estes diversos testes est&#227;o juntos na fun&#231;&#227;o  &quot;main&quot;, no entanto durante este per&#237;odo de testes &#233; feito pela fun&#231;&#227;o &quot;teste&quot;.</p></div></div><div id="synopsis"><p id="control.syn" class="caption expander" onclick="toggleSection('syn')">Synopsis</p><ul id="section.syn" class="hide" onclick="toggleSection('syn')"><li class="src short"><a href="#v:inStr">inStr</a> :: String -&gt; [String]</li><li class="src short"><a href="#v:outStr">outStr</a> :: [String] -&gt; String</li><li class="src short"><a href="#v:main">main</a> :: IO ()</li><li class="src short"><a href="#v:teste">teste</a> :: String -&gt; IO ()</li><li class="src short"><a href="#v:tarefa1">tarefa1</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:juntarNumeros">juntarNumeros</a> :: [String] -&gt; [Int]</li><li class="src short"><a href="#v:removeZeros">removeZeros</a> :: [Int] -&gt; [Int]</li><li class="src short"><a href="#v:testeInput">testeInput</a> :: [String] -&gt; Int</li><li class="src short"><a href="#v:testeFechada">testeFechada</a> :: [String] -&gt; Int</li><li class="src short"><a href="#v:testeNumeroCaixas">testeNumeroCaixas</a> :: [String] -&gt; Int</li><li class="src short"><a href="#v:testeTamanhodasLinhas">testeTamanhodasLinhas</a> :: [String] -&gt; Int</li><li class="src short"><a href="#v:testeCOORDso2numeros">testeCOORDso2numeros</a> :: [String] -&gt; Int</li><li class="src short"><a href="#v:sepTABCoord">sepTABCoord</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:sepTabCOORD">sepTabCOORD</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:sepCOORD1">sepCOORD1</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:sepCOORD2">sepCOORD2</a> :: [String] -&gt; [(Int, Int)]</li><li class="src short"><a href="#v:sepTabCOORDpares">sepTabCOORDpares</a> :: [String] -&gt; [(Int, Int)]</li><li class="src short"><a href="#v:delete1">delete1</a> :: Eq a =&gt; a -&gt; [a] -&gt; [a]</li><li class="src short"><a href="#v:nub1">nub1</a> :: Eq a =&gt; [a] -&gt; [a]</li><li class="src short"><a href="#v:inp">inp</a> :: [Char]</li></ul></div><div id="interface"><h1>Documentation</h1><div class="top"><p class="src"><a name="v:inStr" class="def">inStr</a> :: String -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que dada uma <em>String</em>, separa-a onde encontra <em>\n</em> e junta as diferentes <em>String</em> criadas numa lista de <em>String</em>.</p></div></div><div class="top"><p class="src"><a name="v:outStr" class="def">outStr</a> :: [String] -&gt; String</p><div class="doc"><p>Fun&#231;&#227;o que dada uma lista de <em>String</em> devolve os elementos da lista, agrupados e apenas separados por <em>\n</em>. Fun&#231;&#227;o inversa de <em>inStr</em>.</p></div></div><div class="top"><p class="src"><a name="v:main" class="def">main</a> :: IO ()</p><div class="doc"><p>Fun&#231;&#227;o principal (main).</p></div></div><div class="top"><p class="src"><a name="v:teste" class="def">teste</a> :: String -&gt; IO ()</p><div class="doc"><p>Fun&#231;&#227;o usada para testar o tabuleiro (simulador da fun&#231;&#227;o <em>main</em>).</p></div></div><div class="top"><p class="src"><a name="v:tarefa1" class="def">tarefa1</a> :: [String] -&gt; [String]</p><div class="doc"><p>Fun&#231;&#227;o que junta todos os testes do tabuleiro para que este seja funcional e pronto para rodar o jogo.</p><h2>SUBPROGRAMAS DA FUN&#199;&#195;O TAREFA1</h2></div></div><div class="top"><p class="src"><a name="v:juntarNumeros" class="def">juntarNumeros</a> :: [String] -&gt; [Int]</p><div class="doc"><p>Junta os outputs dos diferentes testes feitos ao tabuleiro.</p></div></div><div class="top"><p class="src"><a name="v:removeZeros" class="def">removeZeros</a> :: [Int] -&gt; [Int]</p><div class="doc"><p>Remove zeros da lista, porque zero representa aus&#234;ncia de erros.</p><h2>TESTE AO TABULEIRO</h2></div></div><div class="top"><p class="src"><a name="v:testeInput" class="def">testeInput</a> :: [String] -&gt; Int</p><div class="doc"><p>Verificar se apenas existem espa&#231;os, asteriscos ou pontos no tabuleiro principal.</p></div></div><div class="top"><p class="src"><a name="v:testeFechada" class="def">testeFechada</a> :: [String] -&gt; Int</p><div class="doc"><p>Verificar se o tabuleiro est&#225; completamente rodeado de asteriscos, ou seja, se est&#225; fechado e n&#227;o h&#225; local por onde possa haver fuga.</p></div></div><div class="top"><p class="src"><a name="v:testeNumeroCaixas" class="def">testeNumeroCaixas</a> :: [String] -&gt; Int</p><div class="doc"><p>Verificar se o n&#250;mero de pontos &#233; exatamente igual ao n&#250;mero de caixas (dadas pelas coordenadas) no tabuleiro.</p></div></div><div class="top"><p class="src"><a name="v:testeTamanhodasLinhas" class="def">testeTamanhodasLinhas</a> :: [String] -&gt; Int</p><div class="doc"><p>Verificar se a caixa &#233; ret&#226;ngular, ou seja, se todas as linhas do tabuleiro t&#234;m o mesmo tamanho.</p></div></div><div class="top"><p class="src"><a name="v:testeCOORDso2numeros" class="def">testeCOORDso2numeros</a> :: [String] -&gt; Int</p><div class="doc"><p>Verificar se as coordenadas s&#227;o bidimensionais. </p><h2>SEPARAR TABULEIRO DE COORDENADAS</h2></div></div><div class="top"><p class="src"><a name="v:sepTABCoord" class="def">sepTABCoord</a> :: [String] -&gt; [String]</p><div class="doc"><p>Separa&#231;&#227;o do tabuleiro das coordenadas. D&#225; apenas o tabuleiro.</p></div></div><div class="top"><p class="src"><a name="v:sepTabCOORD" class="def">sepTabCOORD</a> :: [String] -&gt; [String]</p><div class="doc"><p>Separa&#231;&#227;o das coordenadas do tabuleiro. D&#225; apenas as coordenadas da localiza&#231;&#227;o do Sokoban e das caixas.</p></div></div><div class="top"><p class="src"><a name="v:sepCOORD1" class="def">sepCOORD1</a> :: [String] -&gt; [String]</p><div class="doc"><p>Separa as coordenadas uma a uma.</p></div></div><div class="top"><p class="src"><a name="v:sepCOORD2" class="def">sepCOORD2</a> :: [String] -&gt; [(Int, Int)]</p><div class="doc"><p>Ap&#243;s separar as coordenadas uma a uma, juntamo-las aos pares.</p></div></div><div class="top"><p class="src"><a name="v:sepTabCOORDpares" class="def">sepTabCOORDpares</a> :: [String] -&gt; [(Int, Int)]</p><div class="doc"><p>Juntamos as tr&#234;s anteriores fun&#231;&#245;es e executamos todas apenas nesta.</p><h2>FUN&#199;&#213;ES PREDEFINIDAS</h2></div></div><div class="top"><p class="src"><a name="v:delete1" class="def">delete1</a> :: Eq a =&gt; a -&gt; [a] -&gt; [a]</p><div class="doc"><p>Fun&#231;&#227;o predefinida que dado um elemento elimina a primeira ocorr&#234;ncia desse elemento numa lista.</p><p>EXEMPLO</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>delete1 5 [1,3,5,6,9,5]
</code></strong>[1,3,6,9,5]
</pre></div></div><div class="top"><p class="src"><a name="v:nub1" class="def">nub1</a> :: Eq a =&gt; [a] -&gt; [a]</p><div class="doc"><p>Fun&#231;&#227;o predefinida que elimina as repeti&#231;&#245;es dos elementos de uma lista.</p><p>EXEMPLO</p><pre class="screen"><code class="prompt">&gt;&gt;&gt; </code><strong class="userinput"><code>nub1 [1,3,1,5,3,4,2,3,1,3]
</code></strong>[1,3,5,4,2]
</pre></div></div><div class="top"><p class="src"><a name="v:inp" class="def">inp</a> :: [Char]</p></div></div></div><div id="footer"><p>Produced by <a href="http://www.haskell.org/haddock/">Haddock</a> version 2.16.1</p></div></body></html>