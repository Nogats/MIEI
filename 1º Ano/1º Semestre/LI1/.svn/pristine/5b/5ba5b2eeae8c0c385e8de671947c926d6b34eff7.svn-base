\documentclass[a4paper,12pt]{report}

%Preambulo
\usepackage[portuguese]{babel}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\graphicspath{ {images/} }
\usepackage{fancyhdr}
\usepackage{lastpage}
\usepackage{listings}
\usepackage{grffile}
\usepackage{color}
\usepackage{array}
\usepackage[dvipsnames]{xcolor}
\usepackage{courier}
\usepackage{indentfirst}
\usepackage{tcolorbox}
\usepackage{blindtext}
\usepackage{rotating}
\usepackage{tikz}


\title{\bf Projeto Sokoban \paragraph*{II FASE} }
\author{Francisco Oliveira \and Vitor Peixoto}
\date{20 Dezembro 2015 \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\  {\bf Laboratórios de Informática I \\ \\ Mestrado Integrado em Engenharia Informática}}



%Cabeçalho e Rodapé
\fancypagestyle{plain}{
	\fancyhf{}
	\fancyfoot[C]{Página \thepage\ de \pageref{LastPage}}
	\rhead{{\bf MIEI} Laboratórios de Informática I}
	\lhead{2ª Fase - Projeto Sokoban}
	\renewcommand{\headrulewidth}{0.4pt}
	\renewcommand{\footrulewidth}{0.4pt}
}	
\pagestyle{fancy}
\fancyhf{}
\rhead{Laboratórios de Informática I - {\bf MIEI}}
\lhead{2ª Fase - Projeto Sokoban}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.4pt}
\fancyfoot[C]{Página \thepage\ de \pageref{LastPage}}
\definecolor{light-gray}{gray}{0.98}
%Estilo das Listings (Funções)
\lstset{
	backgroundcolor=\color{light-gray},
	frame=single,
	xleftmargin=2pt,
	stepnumber=1,
	breakatwhitespace=false,         
	breaklines=true, 
	numbers=left,
	numbersep=5pt,
	numberstyle=\ttfamily\tiny\color[gray]{0.35},
	belowcaptionskip=\bigskipamount,
	captionpos=b,
	escapeinside={*'}{'*},
	language=haskell,
	tabsize=4,
	emphstyle={\bf},
	commentstyle=\it,
	stringstyle=\footnotesize\ttfamily,
	showspaces=false,
	columns=flexible,
	basicstyle=\footnotesize\ttfamily,
	keywordstyle=\footnotesize\ttfamily,
	showstringspaces=false,
	morecomment=[l]\%,
	tabsize=4
}
\renewcommand*{\lstlistlistingname}{Lista de Funções}




\begin{document}
\maketitle
\tableofcontents


\chapter{Introdução}

Este projeto foi realizado no âmbito da 2ª fase proposta na unidade curricular de Laboratórios de Informática I do 1º semestre de Engenharia Informática. Foi-nos então proposto criar o jogo {\sl Sokoban}, que já havia sido trabalhado na 1ª fase do projeto, em modo gráfico 2D usando como ferramenta essencial a biblioteca {\sl Gloss}. Dada a sua utilidade para esta fase usamos funções de tarefas da 1ª fase, embora que ligeiramente modificadas e criamos outras funções de raiz, todas respetivamente documentadas através do gerador de documentação {\sl Haddock}.

\chapter{Tarefa D}

Esta tarefa será a responsável pela organização e sequencialização dos comandos. Assim, a biblioteca {\sl Gloss} ainda não será usada nesta tarefa computacional. Como dito no enunciado do projeto, esta tarefa não será mais do que uma sequência de comandos efetuados em um só comando.
\\
\begin{lstlisting}[caption={\small\sl Função {\footnotesize\tt tarefa3'} que dado o tabuleiro, as coordenadas das caixas, do Sokoban e um movimento (U,D,L,R) devolve um par de inteiros com as novas coordenadas do Sokoban.\/}]
tarefa3' :: [String] -> [String]
tarefa3' tabuleiro = tarefa3Aux (reverse (funcaoPlantaMelhor tabuleiro)) (head (sepTabCOORDpares tabuleiro)) (last (init tabuleiro)) where 
	tarefa3Aux ((x:y):z) (a,b) direcao 
		| direcao=="U" = movORnot ((x:y):z) (a,b) (0,1)
		| direcao=="D" = movORnot ((x:y):z) (a,b) (0,-1)
		| direcao=="L" = movORnot ((x:y):z) (a,b) (-1,0)
		| direcao=="R" = movORnot ((x:y):z) (a,b) (1,0)
		| otherwise = error "Comando nao aceite"
\end{lstlisting}

A função supradescrita será extremamente útil pois, usando como auxiliar nesta nova tarefa, será capaz de dar a nova coordenada do {\sl Sokoban} após um movimento. Ou seja, uma repetição desta função irá levar o {\sl Sokoban} a fazer a sequência de comandos inserida até chegar à vitória ou até os comandos terem terminado.

A função que executa o conjunto de comandos e devolve a resposta é a função {\footnotesize\tt tarefa4}. Nesta função é introduzido um tabuleiro com as coordenadas das caixas, do {\sl Sokoban} e as sequências de movimentos e devolve {\footnotesize\tt "FIM <tick\_count>" } caso as caixas estejam todas colocadas nos pontos, ou seja, o jogo esteja terminado, onde {\footnotesize\tt <tick\_count>} é o número de movimentos funcionais (aqueles em que o {\sl Sokoban} realmente moveu-se) efetuados, ou devolve {\footnotesize\tt "INCOMPLETO <tick\_count>" } caso as caixas não estejam todas colocadas nos pontos, ou seja, o jogo não esteja ainda acabado.
\\
\begin{lstlisting}[caption={\small\sl Função {\footnotesize\tt tarefa4} que dado o tabuleiro, as coordenadas das caixas, do Sokoban e uma sequência de movimentos ("UDLR" e.g.) devolve o estado do jogo e o número de movimentos funcionais efetuados.}]
tarefa4 :: [String] -> String
tarefa4 tabuleiro = rinceAndRepeat (tabuleiro) (last (init tabuleiro))
\end{lstlisting}


\begin{tcolorbox}[width=\textwidth,colback={black},title={\sf Linha de Comandos 2.1:},outer arc=0mm,colupper=white]    
	{\footnotesize\tt *Main> tarefa4 ["\#\#\#\#\#","\#. .\#","\#   \#","\#   \#","\#\#\#\#\#","2 1","1 2","3 2","RUDLLU"]

	"FIM 6" }
\end{tcolorbox} 

\begin{tcolorbox}[width=\textwidth,colback={black},title={\sf Linha de Comandos 2.2:},outer arc=0mm,colupper=white]    
	{\footnotesize\tt *Main> tarefa4 ["\#\#\#\#\#","\#. .\#","\#   \#","\#   \#","\#\#\#\#\#","2 1","1 2","3 2","RUDLLLL"]
		
	"INCOMPLETO 5" }
\end{tcolorbox}

Esta função {\footnotesize\tt tarefa4} é auxiliada por muitas outras funções, sendo uma das mais relevantes a função {\footnotesize\tt vitoria} que deteta se ainda há algum carater {\footnotesize\tt H} no tabuleiro. Caso ainda haja algum carater {\tt H}, significa que o jogo ainda não está terminado. Esta função devolve {\footnotesize\tt "INCOMPLETO" }ou {\footnotesize\tt "FIM" }caso o jogo ainda não tenha terminado ou já tenha acabado, respetivamente. Esta função é chamada repetidamente na função {\footnotesize\tt rinceAndRepeat} (função semelhante à {\footnotesize\tt tarefa4}) até que todas as caixas estejam colocadas nos pontos. Por isso é essencial uma função auxiliar que verifique se todas as caixas estão em cima de pontos.

Estas e outras mais funções, que podem ser visualizadas no módulo {\sl Haskell} "trabalhoD.hs" localizado no servidor {\sl SVN}, são essenciais para a funcionalidade desta tarefa.



\chapter{Tarefa E}
A Tarefa E não tem como propósito efetuar desenvolvimentos no jogo, mas sim aperfeiçoar as nossas capacidades e habilidades com a biblioteca {\sl Gloss} através do tipo {\sl Picture}, um tipo que será fundamental na Tarefa F. O objetivo é determinar as dimensões do menor retângulo que envolve uma {\sl Picture}.
\\
\begin{figure}[h]
	\centering
	\includegraphics{image1}
	\caption{\small\sl Exemplo de retângulos de menores dimensões que envolve cada figura geométrica.}
\end{figure}




















\chapter{Tarefa F}
Nesta tarefa iremos realmente criar o jogo {\sl Sokoban} recorrendo às capacidades gráficas da biblioteca {\sl Gloss}. Tendo em conta que o nosso ponto de partida seria inspirado no estilo do sítio {\sf sokoban.info} criamos um tema baseado no famoso jogo {\sl Super Mario Bros.} Para isso criamos diferentes {\it bitmaps} inspirados no visual gráfico do jogo, respeitando sempre a jogabilidade e coerência necessários para a execução do {\sl Sokoban}. Estes {\it bitmaps} têm geralmente uma dimensão de 40x40 e foram criados usando a ferramenta de desenho {\sl MSPaint}. Alguns exemplos podem ser vistos abaixo ou encontrados na sua totalidade na pasta {\sl "bmp" }do servidor {\sl SVN}
\begin{figure}[h]
	\centering
	\includegraphics[width=0.6\textwidth]{image2}
	\caption{\small\sl Alguns exemplos dos bitmaps usados no jogo. O Mario representa o jogador. A caixa com o ponto de interrogação representa uma caixa que não está em cima do ponto. E a moeda é o ponto onde devemos colocar a caixa.}
\end{figure}

Devemos então passar à inserção dos {\it bitmaps} no jogo, usando para isso o pacote {\it Graphics.Gloss.Data.Picture} que nos permite inserir para além de inserir {\it bitmaps}, desenhar também linhas, círculos, polígonos, texto e efetuar modificações às {\sl Pictures}.
\\
\begin{lstlisting}[caption={\small\sl Ponto de entrada {\footnotesize\tt main} que carrega os diversos bitmaps e executa a função {\footnotesize\tt joga}}]
main = do
	boxoff <- loadBMP "BOXOFF.bmp"
	boxon <- loadBMP "BOXON.bmp"
	ponto <- loadBMP "PONTO.bmp"
	(...)
	l9 <- loadBMP "L9.bmp"
	joga (tabuleiros,[boxoff,boxon,ponto,(...),l9],"",0,mapa0) desenhaJogo reageEvento
	
	
joga :: Estado -> (Estado -> Picture) -> (Event -> Estado -> Estado) -> IO ()
joga tabuleiro desenha reage = play (FullScreen (1366,768))
(makeColorI 153 217 234 1) 90
tabuleiro desenha reage (\time estado -> estado)
\end{lstlisting}

A função {\footnotesize\tt joga} é a equivalente à função {\footnotesize\tt display} definida no pacote {\it Graphics.Gloss} e tem como função atualizar e desenhar a janela, dado um tabuleiro e a lista das {\sl Pictures} desenha o tabuleiro pedido ({\sl mapa0}; {\sl mapa1}; etc.) e atualiza o seu aspeto de acordo com os eventos introduzido na função {\footnotesize\tt reageEvento}.

Esta janela vai estar em formato {\sl FullScreen} com a dimensão de (1366x768) em píxeis. E terá uma cor de fundo à nossa escolha, que foi definida com o auxílio da função {\footnotesize\tt makeColorI} importada do pacote {\it Graphics.Gloss.Data.Color}. Sendo que o jogo não deverá sofrer alterações automaticamente com o passar do tempo, definimos a função anónima onde o tempo não é um fator influenciador do estado da janela: {\footnotesize\tt (time estado -> estado) }.

Os mapas dos jogos estão definidos em funções com o seu respetivo nome. Estas funções são agrupadas numa lista na função {\footnotesize\tt tabuleiros}.
\\
\begin{lstlisting}[caption={\small\sl Função que define o {\footnotesize\tt mapa0} e função {\footnotesize\tt tabuleiros} que agrupa os mapas numa lista.}]
mapa0 :: String
mapa0 = outStr ["#######","#     #","#    .#","#    .#","#######","1 1","2 2","2 1",""]

tabuleiros :: [String]
tabuleiros = [mapa0,mapa1,(...),mapa9]
\end{lstlisting}

\pagebreak

\begin{figure}[h]
	\centering
	\includegraphics[width=0.6\textwidth]{image3}
	\caption{\small\sl Seleção dos níveis (mapas) do jogo .}
\end{figure}
Para este jogo foram definidos 9 níveis com um grau de dificuldade crescente de acordo com os respetivos níveis. Os níveis são selecionados através de um clique na {\sl Picture} representativa do nível que queremos jogar.

O evento ocorrido após o clique do rato só é possível graças à função {\footnotesize\tt reageEvento}. Esta função efetua modificações no jogo através da introdução de comandos pelo teclado e/ou rato usando capacidades de um pacote extremamente útil da biblioteca {\sl Gloss}, {\it Graphics.Gloss.Interface.Pure.Game}.
\\
\begin{lstlisting}[caption={\small\sl Excerto da função {\footnotesize\tt reageEvento}}]
reageEvento (EventKey (MouseButton LeftButton ) (Down) (modifiers) (x,y)) (tabuleiro,[boxoff,boxon,ponto,(...),l9],moves,lvl,mapaatm)
		| ((x>=(205))&&(x<=(245))&&(y>=(((fromIntegral (length (funcaoPlantaMelhor (init (inStr mapaatm)))*(20)))+10)))&&(y<=((fromIntegral (length (funcaoPlantaMelhor (init (inStr mapaatm)))*(20)))+50))  ) = (tabuleiro,[boxoff,boxon,ponto,chao,parede,mario,undo,restart,sokoban,victory,help,l1,l2,l3,l4,l5,l6,l7,l8,l9,l0],moves,9,mapa0)
\end{lstlisting}

Neste excerto da função {\footnotesize\tt reageEvento} supradescrito, é chamado o construtor {\sl EventKey}, onde um clique com o botão esquerdo do rato ({\footnotesize\tt (MouseButton LeftButton)}) dentro da área da janela definida pelas coordenadas (x,y) provoca uma alteração em {\footnotesize\tt lvl}, um valor inteiro, que passa a ter o valor de 9. Este valor está localizado no {\sl type} {\footnotesize\tt Estado}. A função {\footnotesize\tt joga} irá ser executada novamente, sofrendo uma alteração.
\\
\begin{lstlisting}[caption={\small\sl A função {\footnotesize\tt joga}, que antes tinha o valor de 0, passa agora a ter o valor 9, fazendo com que apareça o mapa que escolhemos, o mapa9.}]
joga (tabuleiros,[boxoff,boxon,(...),l9],"",0,mapa0) desenhaJogo reageEvento

joga (tabuleiros,[boxoff,boxon,(...),l9],"",9,mapa0) desenhaJogo reageEvento
\end{lstlisting}










\chapter {Testes}
TESTES AQUI

\chapter {Conclusões}
CONCLUSOES AQUI

\section {EN}
Hello

\section {ES}
Hola

\section {PT}
Olá

\section {IT}
Ciao

\section {FR}
Bonjour

\section{DE}
Hallo




\lstlistoflistings

\listoffigures

\end{document}